"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MuiChat = MuiChat;

var _core = require("@material-ui/core");

var _react = _interopRequireDefault(require("react"));

var _MuiAudioInput = require("./MuiAudioInput");

var _MuiFileInput = require("./MuiFileInput");

var _MuiMessage = require("./MuiMessage");

var _MuiMultiSelectInput = require("./MuiMultiSelectInput");

var _MuiSelectInput = require("./MuiSelectInput");

var _MuiTextInput = require("./MuiTextInput");

const useStyles = (0, _core.makeStyles)(theme => ({
  container: {
    height: '100%',
    width: '100%',
    padding: theme.spacing(1),
    backgroundColor: theme.palette.background.default,
    display: 'flex',
    flexDirection: 'column',
    '& > *': {
      maxWidth: '100%'
    },
    '& > * + *': {
      marginTop: theme.spacing(1)
    }
  },
  messages: {
    flex: '1 1 0%',
    overflowY: 'auto',
    WebkitOverflowScrolling: 'touch',
    display: 'flex',
    flexDirection: 'column',
    '& > *': {
      maxWidth: '100%'
    }
  },
  action: {
    flex: '0 1 auto',
    display: 'flex',
    alignContent: 'flex-end',
    '& > *': {
      minWidth: 0
    }
  }
}));

function MuiChat({
  chatController
}) {
  const classes = useStyles();
  const chatCtl = chatController;

  const [messages, setMessages] = _react.default.useState(chatCtl.getMessages());

  const [actReq, setActReq] = _react.default.useState(chatCtl.getActionRequest());

  const msgRef = _react.default.useRef(null);

  const scroll = _react.default.useCallback(() => {
    if (msgRef.current) {
      msgRef.current.scrollTop = msgRef.current.scrollHeight; // msgRef.current.scrollIntoView(true);
    }
  }, [msgRef]);

  _react.default.useEffect(() => {
    function handleMassagesChanged() {
      setMessages([...chatCtl.getMessages()]);
      scroll();
    }

    function handleActionChanged() {
      setActReq(chatCtl.getActionRequest());
      scroll();
    }

    chatCtl.addOnMessagesChanged(handleMassagesChanged);
    chatCtl.addOnActionChanged(handleActionChanged);
  }, [chatCtl, scroll]);

  const CustomComponent = _react.default.useMemo(() => {
    if (!actReq || actReq.type !== 'custom') {
      return null;
    }

    return actReq.Component;
  }, [actReq]);

  const unknownMsg = {
    type: 'text',
    content: 'Unknown message.',
    self: false
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.container
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.messages,
    ref: msgRef
  }, messages.map(msg => {
    if (msg.type === 'text' || msg.type === 'jsx' || msg.type === 'text_audio') {
      return /*#__PURE__*/_react.default.createElement(_MuiMessage.MuiMessage, {
        key: messages.indexOf(msg),
        id: `cu-msg-${messages.indexOf(msg) + 1}`,
        message: msg,
        showDateTime: !!chatCtl.getOption().showDateTime
      });
    }

    return /*#__PURE__*/_react.default.createElement(_MuiMessage.MuiMessage, {
      key: messages.indexOf(msg),
      id: `cu-msg-${messages.indexOf(msg) + 1}`,
      message: unknownMsg,
      showDateTime: !!chatCtl.getOption().showDateTime
    });
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.action
  }, actReq && actReq.type === 'text' && /*#__PURE__*/_react.default.createElement(_MuiTextInput.MuiTextInput, {
    chatController: chatCtl,
    actionRequest: actReq
  }), actReq && actReq.type === 'select' && /*#__PURE__*/_react.default.createElement(_MuiSelectInput.MuiSelectInput, {
    chatController: chatCtl,
    actionRequest: actReq
  }), actReq && actReq.type === 'multi-select' && /*#__PURE__*/_react.default.createElement(_MuiMultiSelectInput.MuiMultiSelectInput, {
    chatController: chatCtl,
    actionRequest: actReq
  }), actReq && actReq.type === 'file' && /*#__PURE__*/_react.default.createElement(_MuiFileInput.MuiFileInput, {
    chatController: chatCtl,
    actionRequest: actReq
  }), actReq && actReq.type === 'audio' && /*#__PURE__*/_react.default.createElement(_MuiAudioInput.MuiAudioInput, {
    chatController: chatCtl,
    actionRequest: actReq
  }), actReq && actReq.type === 'custom' && /*#__PURE__*/_react.default.createElement(CustomComponent, {
    chatController: chatCtl,
    actionRequest: actReq
  })));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,