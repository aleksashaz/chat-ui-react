import { Button, makeStyles } from '@material-ui/core';
import React from 'react';
const useStyles = makeStyles(theme => ({
  container: {
    flex: '1 1 auto',
    display: 'flex',
    flexDirection: 'column',
    '& > *': {
      flex: '0 0 auto',
      maxWidth: '100%'
    },
    '& > * + *': {
      marginTop: theme.spacing(1)
    }
  }
}));
export function MuiSelectInput({
  chatController,
  actionRequest
}) {
  const classes = useStyles();
  const chatCtl = chatController;
  const setResponse = React.useCallback(value => {
    const option = actionRequest.options.find(o => o.value === value);

    if (!option) {
      throw new Error(`Unknown value: ${value}`);
    }

    const res = {
      type: 'select',
      value: option.text,
      option
    };
    chatCtl.setActionResponse(actionRequest, res);
  }, [actionRequest, chatCtl]);
  return /*#__PURE__*/React.createElement("div", {
    className: classes.container
  }, actionRequest.options.map(o => /*#__PURE__*/React.createElement(Button, {
    key: actionRequest.options.indexOf(o),
    type: "button",
    value: o.value,
    onClick: e => setResponse(e.currentTarget.value),
    variant: "contained",
    color: "primary"
  }, o.text)));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tdWkvTXVpU2VsZWN0SW5wdXQudHN4Il0sIm5hbWVzIjpbIkJ1dHRvbiIsIm1ha2VTdHlsZXMiLCJSZWFjdCIsInVzZVN0eWxlcyIsInRoZW1lIiwiY29udGFpbmVyIiwiZmxleCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwibWF4V2lkdGgiLCJtYXJnaW5Ub3AiLCJzcGFjaW5nIiwiTXVpU2VsZWN0SW5wdXQiLCJjaGF0Q29udHJvbGxlciIsImFjdGlvblJlcXVlc3QiLCJjbGFzc2VzIiwiY2hhdEN0bCIsInNldFJlc3BvbnNlIiwidXNlQ2FsbGJhY2siLCJ2YWx1ZSIsIm9wdGlvbiIsIm9wdGlvbnMiLCJmaW5kIiwibyIsIkVycm9yIiwicmVzIiwidHlwZSIsInRleHQiLCJzZXRBY3Rpb25SZXNwb25zZSIsIm1hcCIsImluZGV4T2YiLCJlIiwiY3VycmVudFRhcmdldCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsTUFBVCxFQUF3QkMsVUFBeEIsUUFBMEMsbUJBQTFDO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixPQUFsQjtBQUtBLE1BQU1DLFNBQVMsR0FBR0YsVUFBVSxDQUFFRyxLQUFELEtBQW1CO0FBQzlDQyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsSUFBSSxFQUFFLFVBREc7QUFFVEMsSUFBQUEsT0FBTyxFQUFFLE1BRkE7QUFHVEMsSUFBQUEsYUFBYSxFQUFFLFFBSE47QUFJVCxhQUFTO0FBQ1BGLE1BQUFBLElBQUksRUFBRSxVQURDO0FBRVBHLE1BQUFBLFFBQVEsRUFBRTtBQUZILEtBSkE7QUFRVCxpQkFBYTtBQUNYQyxNQUFBQSxTQUFTLEVBQUVOLEtBQUssQ0FBQ08sT0FBTixDQUFjLENBQWQ7QUFEQTtBQVJKO0FBRG1DLENBQW5CLENBQUQsQ0FBNUI7QUFlQSxPQUFPLFNBQVNDLGNBQVQsQ0FBd0I7QUFDN0JDLEVBQUFBLGNBRDZCO0FBRTdCQyxFQUFBQTtBQUY2QixDQUF4QixFQU1nQjtBQUNyQixRQUFNQyxPQUFPLEdBQUdaLFNBQVMsRUFBekI7QUFDQSxRQUFNYSxPQUFPLEdBQUdILGNBQWhCO0FBRUEsUUFBTUksV0FBVyxHQUFHZixLQUFLLENBQUNnQixXQUFOLENBQ2pCQyxLQUFELElBQXlCO0FBQ3ZCLFVBQU1DLE1BQU0sR0FBR04sYUFBYSxDQUFDTyxPQUFkLENBQXNCQyxJQUF0QixDQUE0QkMsQ0FBRCxJQUFPQSxDQUFDLENBQUNKLEtBQUYsS0FBWUEsS0FBOUMsQ0FBZjs7QUFDQSxRQUFJLENBQUNDLE1BQUwsRUFBYTtBQUNYLFlBQU0sSUFBSUksS0FBSixDQUFXLGtCQUFpQkwsS0FBTSxFQUFsQyxDQUFOO0FBQ0Q7O0FBQ0QsVUFBTU0sR0FBeUIsR0FBRztBQUNoQ0MsTUFBQUEsSUFBSSxFQUFFLFFBRDBCO0FBRWhDUCxNQUFBQSxLQUFLLEVBQUVDLE1BQU0sQ0FBQ08sSUFGa0I7QUFHaENQLE1BQUFBO0FBSGdDLEtBQWxDO0FBS0FKLElBQUFBLE9BQU8sQ0FBQ1ksaUJBQVIsQ0FBMEJkLGFBQTFCLEVBQXlDVyxHQUF6QztBQUNELEdBWmlCLEVBYWxCLENBQUNYLGFBQUQsRUFBZ0JFLE9BQWhCLENBYmtCLENBQXBCO0FBZ0JBLHNCQUNFO0FBQUssSUFBQSxTQUFTLEVBQUVELE9BQU8sQ0FBQ1Y7QUFBeEIsS0FDR1MsYUFBYSxDQUFDTyxPQUFkLENBQXNCUSxHQUF0QixDQUEyQk4sQ0FBRCxpQkFDekIsb0JBQUMsTUFBRDtBQUNFLElBQUEsR0FBRyxFQUFFVCxhQUFhLENBQUNPLE9BQWQsQ0FBc0JTLE9BQXRCLENBQThCUCxDQUE5QixDQURQO0FBRUUsSUFBQSxJQUFJLEVBQUMsUUFGUDtBQUdFLElBQUEsS0FBSyxFQUFFQSxDQUFDLENBQUNKLEtBSFg7QUFJRSxJQUFBLE9BQU8sRUFBR1ksQ0FBRCxJQUFhZCxXQUFXLENBQUNjLENBQUMsQ0FBQ0MsYUFBRixDQUFnQmIsS0FBakIsQ0FKbkM7QUFLRSxJQUFBLE9BQU8sRUFBQyxXQUxWO0FBTUUsSUFBQSxLQUFLLEVBQUM7QUFOUixLQVFHSSxDQUFDLENBQUNJLElBUkwsQ0FERCxDQURILENBREY7QUFnQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdXR0b24sIFRoZW1lLCBtYWtlU3R5bGVzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQ2hhdENvbnRyb2xsZXIgfSBmcm9tICcuLi9jaGF0LWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgU2VsZWN0QWN0aW9uUmVxdWVzdCwgU2VsZWN0QWN0aW9uUmVzcG9uc2UgfSBmcm9tICcuLi9jaGF0LXR5cGVzJztcblxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcygodGhlbWU6IFRoZW1lKSA9PiAoe1xuICBjb250YWluZXI6IHtcbiAgICBmbGV4OiAnMSAxIGF1dG8nLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAnJiA+IConOiB7XG4gICAgICBmbGV4OiAnMCAwIGF1dG8nLFxuICAgICAgbWF4V2lkdGg6ICcxMDAlJyxcbiAgICB9LFxuICAgICcmID4gKiArIConOiB7XG4gICAgICBtYXJnaW5Ub3A6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgfSxcbiAgfSxcbn0pKTtcblxuZXhwb3J0IGZ1bmN0aW9uIE11aVNlbGVjdElucHV0KHtcbiAgY2hhdENvbnRyb2xsZXIsXG4gIGFjdGlvblJlcXVlc3QsXG59OiB7XG4gIGNoYXRDb250cm9sbGVyOiBDaGF0Q29udHJvbGxlcjtcbiAgYWN0aW9uUmVxdWVzdDogU2VsZWN0QWN0aW9uUmVxdWVzdDtcbn0pOiBSZWFjdC5SZWFjdEVsZW1lbnQge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XG4gIGNvbnN0IGNoYXRDdGwgPSBjaGF0Q29udHJvbGxlcjtcblxuICBjb25zdCBzZXRSZXNwb25zZSA9IFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgICh2YWx1ZTogc3RyaW5nKTogdm9pZCA9PiB7XG4gICAgICBjb25zdCBvcHRpb24gPSBhY3Rpb25SZXF1ZXN0Lm9wdGlvbnMuZmluZCgobykgPT4gby52YWx1ZSA9PT0gdmFsdWUpO1xuICAgICAgaWYgKCFvcHRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHZhbHVlOiAke3ZhbHVlfWApO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVzOiBTZWxlY3RBY3Rpb25SZXNwb25zZSA9IHtcbiAgICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgICAgIHZhbHVlOiBvcHRpb24udGV4dCxcbiAgICAgICAgb3B0aW9uLFxuICAgICAgfTtcbiAgICAgIGNoYXRDdGwuc2V0QWN0aW9uUmVzcG9uc2UoYWN0aW9uUmVxdWVzdCwgcmVzKTtcbiAgICB9LFxuICAgIFthY3Rpb25SZXF1ZXN0LCBjaGF0Q3RsXSxcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmNvbnRhaW5lcn0+XG4gICAgICB7YWN0aW9uUmVxdWVzdC5vcHRpb25zLm1hcCgobykgPT4gKFxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAga2V5PXthY3Rpb25SZXF1ZXN0Lm9wdGlvbnMuaW5kZXhPZihvKX1cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICB2YWx1ZT17by52YWx1ZX1cbiAgICAgICAgICBvbkNsaWNrPXsoZSk6IHZvaWQgPT4gc2V0UmVzcG9uc2UoZS5jdXJyZW50VGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICB2YXJpYW50PVwiY29udGFpbmVkXCJcbiAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgICA+XG4gICAgICAgICAge28udGV4dH1cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICApKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ==